<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!--AOP的注解开发方式，这里IOC不用注解开发方式，只对AOP进行注解开发-->
    <!--打开注解方式AOP开发-->
    <aop:aspectj-autoproxy/>
    <!--将目标对象交给Spring管理，即配置bean-->
    <bean id="orderDao" class="Spring.DaoImp.OrderDaoImp"/>
    <!--将切面类交给Spring管理，即配置bean-->
    <bean id="aspectJAnno" class="Spring.DaoImp.AspectJAnno"/>
    <!--在切面类上添加注解-->

















    <!--AOP的一些相关术语，这里用UserDao来举例说明
Class UserDao {
public void save();
public void find();
public void update();
public void delete();
}
JoinPoint:连接点，可以被拦截到的点。
举例：UserDao中的增删改查方法都可以被增强，即都能被拦截到，所以这些方法都可以称为连接点
Pointcut：切入点，真正被拦截到的点。
举例：现在只对UserDao中的save方法进行增强，此时save方法被称为切入点。
Advice：增强/通知（方法层面的增强）
举例：现在对save方法前进行权限校验（CheckIdentity）,此时权限校验的方法就称为Advice通知，且为前置通知
Introduction：引介
举例：如果要对UserDao这个类进行增强，即在类层面的增强或通知叫做引介，比如增加该类的属性或方法
Target：目标，被增强的对象
举例：现在对UserDao进行增强，故称UserDao为目标类，即目标对象Target
Weaving：织入，将通知/增强（Advice）应用到目标对象（Target）的过程叫做织入
Proxy：代理对象
Aspect：切面，多个通知（Advice）和切入点（Pointcut）的组合
-->

</beans>