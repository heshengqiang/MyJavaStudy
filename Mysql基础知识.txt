解决中文乱码问题：通过修改mysql安装文件夹下my.ini目录里的编码格式如把utf8改为gbk等。
数据库：
创建：create database 数据库名 character 字符集 ；
删除：drop database 数据库名；
修改：alter database 数据库名 character set 字符集 ；
查询：show database;
         show create database 数据库名；
         select database（）；
表：
创建：create table 表名 （列名1 数据类型 列的约束，
                                        列名2 数据类型 烈的约束，
                                             .......
                                        )
约束：unique 唯一性约束；
         primary key 主键约束；
         not null 非空约束；
         auto_increment 自动增长；
删除：drop table 表名 
修改：alter table 表名（add drop modify change）
         向表中添加表的列:alter table (表名）add  (列名） int not null;
         删除表中的列：alter table (表名） drop sex;
         修改字段名（列名）：alter table (表名) modify (列名）数据类型  约束条件（相对与新建字段）
         修改列名：alter table change （旧列名）（新列名） 数据类型；
         rename table 旧表名 to 新表名 （尽量不用）
         修改表名：rename table （旧表名）to （新表名）；
         alter table 表名 character set 字符集
查询：
        查看所有表：show tables
        查看表的创建过程：show create 表名;
        查询表结构：desc 表名;
表中数据的操作：
        添加数据：
       insert into (表名）（列名1，列名2，列名3，列名4....) values (值1，值2，值3，值4....);
      //添加数据注意不要违背字段的约束，例如添加重复的唯一性约束字段的值。
       //此时应该插入所有字段值才可以省略表达列名，对比上一句即可。
       添加数据：insert into (表名）values (值1，值2，值3，值4....);
      //批量插入数据效率高但是需要认真检查插入数据的合法性。
      批量添加数据：insert into (表名）values (值1，值2，值3，值4....),(值1，值2，值3，值4....)，(值1，值2，值3，值4....)，(值1，值2，值3，值4....)。         ；
      删除数据：
     //delete：DML 一条一条删除表中数据
     //truncate：DDL先删除表，再重建表，
     //数据量少delete效率高，数据量多truncate效率高。
     delete from (表名）；//删除表中的所有数据；
     delete from (表名）where条件；//删除符合条件的所有数据；
     更新数据：
     update (表名）set 列名1=值，列名2=值。。。 ;//将列名数据全部修改更新；
     update (表名） set 列名1='值',列名2=值 。。where条件语句;//将符合where条件语句的数据进行修改；
    查询数据：
    简单查询数据：
    as 别名 如 select name as 姓名,age from user; 
    distinct 去掉重复的列的值 如 select distinct name as 姓名,age from user; //去掉重名的行
    运算查询:
    //不会改变数据库中数据的值，只是查询时做运算可以加减乘除等基本运算
    select name,age+2 from user;//查询结果年龄都加2 查询时可以做基本运算；
    模糊查询:
    //模糊查询中：%代表多个字符_代表一个字符
    select *from user where name like "%圣强"；//找到某某圣强的信息；
    in:
    //in表示获得括号范围内的所有值
    select *from user where  id in(1,3,4);//查询id=1,3,4三个人的信息；
    条件查询：
    条件查询运算符：<,>,<=,>=,<>/!=(不等于）
    select *from user where id>5 and age>18;//查询id>5并且年龄>18的学生信息；
    select *from user where id<7 or id>20;//查询id<7或者id>20的学生信息；
    //下面两句效果相同
    select *from user where between 7 and 20；
    select *from user where id<=7 and id>=20;
    聚合查询：
    //聚合函数：sum () avg () count () max () min ()  where条件语句后面不能有聚合函数
    select  sum(price)from goods;//查询所有商品的价格总和；
    //这样是可以的
    select *from goods where price>(select avg(price) from goods);//查询大于平均价格的所有商品
    select count(distinct type) from goods;//查询商品的类型数；
    分组查询：
    //根据字段分组，分组后统计各组个数
    select cno,count(*) from goods group by cno;
    select type,count(*) from goods group by type;查询各商品类型的商品种类数量
    附加条件查询：
    select type,count(*)from goods group by type having count(*)=2;//having 后面可以进行
    查询结果排序：
    select %%% from 表名 order by 列1 asc（升序）或者desc（降序） ，列2 desc 或者 asc;
    编写顺序：
    select....from....where....group by....having....order by....
    执行顺序：
    from....where....group by....having....select....order by....
数据类型：
    字符串（char varchar text)
    char(n) 固定长度，最多255个字符，可以指定长度，未达到长度自动补空格。
    varchar(n) 固定长度，最多65535个字符，可指定长度；用多少占用多少，节省空间推荐使用。
    text 不用指定长度，一般写用户文档时或者比如商品介绍之类的需要填写较多文字时用。
    date 日期类型如：‘2008-10-23’
    time 时间 类型如：‘12:23:24'
    datetime 日期加时间类型如：’2001-2-23 22:12:21‘
    timestamp(14) 自动获取当时日期加时间类型如：’2001-2-23 22:12:21‘
    二进制数据（Blob)
    tinyint (-128~127)
    smallint(-32768~32767)
    mediumint(-8388608~8388607)
    int (-2147483648~2147483647)
    bigint;
